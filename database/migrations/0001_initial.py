# Generated by Django 5.2 on 2025-05-25 09:50

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("author", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("keywords", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("instructor", models.CharField(max_length=150)),
                (
                    "course_link",
                    models.URLField(
                        blank=True,
                        help_text="Link to the course",
                        max_length=500,
                        validators=[django.core.validators.URLValidator()],
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("CE", "Civil Engineering"),
                            ("ME", "Mechanical Engineering"),
                            ("EP", "Electrical Power Engineering"),
                            ("EC", "Electronics Engineering"),
                            ("CEIT", "Computer Engineering and Information Technology"),
                            ("MC", "Mechatronics Engineering"),
                            ("ChE", "Chemical Engineering"),
                            ("Agri", "Agricultural Engineering"),
                            ("MinE", "Mining Engineering"),
                            ("NE", "Nuclear Engineering"),
                            ("BioT", "Biotechnology"),
                            ("Arch", "Architecture"),
                            ("UNDEFINED", "Undefined"),
                        ],
                        default="UNDEFINED",
                        max_length=50,
                    ),
                ),
            ],
            options={
                "verbose_name": "Engineering Course",
                "verbose_name_plural": "Engineering Courses",
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="Document",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                (
                    "pdf_file",
                    models.FileField(
                        upload_to="documents/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["pdf"]
                            )
                        ],
                    ),
                ),
                ("summary", models.TextField(blank=True)),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="EngineeringBook",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("author", models.CharField(max_length=150)),
                (
                    "download_link",
                    models.URLField(
                        blank=True,
                        help_text="Official/publisher link for the book",
                        max_length=500,
                        validators=[django.core.validators.URLValidator()],
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, help_text="Summary of the contents", max_length=20
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("CE", "Civil Engineering"),
                            ("ME", "Mechanical Engineering"),
                            ("EP", "Electrical Power Engineering"),
                            ("EC", "Electronics Engineering"),
                            ("CEIT", "Computer Engineering and Information Technology"),
                            ("MC", "Mechatronics Engineering"),
                            ("ChE", "Chemical Engineering"),
                            ("Agri", "Agricultural Engineering"),
                            ("MinE", "Mining Engineering"),
                            ("NE", "Nuclear Engineering"),
                            ("BioT", "Biotechnology"),
                            ("Arch", "Architecture"),
                            ("UNDEFINED", "Undefined"),
                        ],
                        default="UNDEFINED",
                        max_length=50,
                    ),
                ),
            ],
            options={
                "verbose_name": "Engineering Book",
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="News",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                (
                    "description",
                    models.TextField(blank=True, help_text="Short summary of the news"),
                ),
                (
                    "link",
                    models.URLField(
                        blank=True,
                        help_text="Optional link to full news",
                        max_length=500,
                        validators=[django.core.validators.URLValidator()],
                    ),
                ),
                (
                    "start_date",
                    models.DateTimeField(help_text="Date the news becomes visible"),
                ),
                (
                    "end_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date after which the news is no longer active",
                        null=True,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("CE", "Civil Engineering"),
                            ("ME", "Mechanical Engineering"),
                            ("EP", "Electrical Power Engineering"),
                            ("EC", "Electronics Engineering"),
                            ("CEIT", "Computer Engineering and Information Technology"),
                            ("MC", "Mechatronics Engineering"),
                            ("ChE", "Chemical Engineering"),
                            ("Agri", "Agricultural Engineering"),
                            ("MinE", "Mining Engineering"),
                            ("NE", "Nuclear Engineering"),
                            ("BioT", "Biotechnology"),
                            ("Arch", "Architecture"),
                            ("UNDEFINED", "Undefined"),
                        ],
                        default="UNDEFINED",
                        max_length=50,
                    ),
                ),
                (
                    "posted_by",
                    models.CharField(
                        help_text="Person or department posting the news",
                        max_length=150,
                    ),
                ),
                (
                    "is_new",
                    models.BooleanField(
                        default=True,
                        help_text="Set to True when the news is freshly added",
                    ),
                ),
            ],
            options={
                "verbose_name": "News Item",
                "verbose_name_plural": "News",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="Resource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("instructor", models.CharField(max_length=150)),
                (
                    "link",
                    models.URLField(
                        blank=True,
                        help_text="Download link or link to the event",
                        max_length=500,
                        validators=[django.core.validators.URLValidator()],
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("CE", "Civil Engineering"),
                            ("ME", "Mechanical Engineering"),
                            ("EP", "Electrical Power Engineering"),
                            ("EC", "Electronics Engineering"),
                            ("CEIT", "Computer Engineering and Information Technology"),
                            ("MC", "Mechatronics Engineering"),
                            ("ChE", "Chemical Engineering"),
                            ("Agri", "Agricultural Engineering"),
                            ("MinE", "Mining Engineering"),
                            ("NE", "Nuclear Engineering"),
                            ("BioT", "Biotechnology"),
                            ("Arch", "Architecture"),
                            ("UNDEFINED", "Undefined"),
                        ],
                        default="UNDEFINED",
                        max_length=50,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                (
                    "description",
                    models.CharField(
                        blank=True, help_text="Summary of the contents", max_length=200
                    ),
                ),
                (
                    "resource_type",
                    models.CharField(
                        choices=[
                            ("BOOK", "Book"),
                            ("COURSE", "Course"),
                            ("EVENT", "Event"),
                            ("RESEARCH", "Research"),
                            ("NEWS", "News"),
                        ],
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Engineering links",
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="Semester",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=10)),
                ("year", models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "student_id",
                    models.CharField(
                        max_length=20, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("student_name", models.CharField(max_length=100)),
                ("department", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("date_joined", models.DateTimeField(auto_now_add=True)),
                ("age", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Interaction",
            fields=[
                ("interaction_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "interaction_type",
                    models.CharField(
                        choices=[("CLICK", "Click"), ("SEARCH", "Search")],
                        max_length=10,
                    ),
                ),
                ("weight", models.FloatField(default=1.0)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "resource",
                    models.ForeignKey(
                        blank=True,
                        db_column="resource_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interactions",
                        to="database.resource",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        db_column="student_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interactions",
                        to="database.student",
                    ),
                ),
            ],
            options={
                "db_table": "database_interaction",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="StudentAuth",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password_hash", models.CharField(max_length=128)),
                ("last_login", models.DateTimeField(null=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "student",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="auth",
                        to="database.student",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Subject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("code", models.CharField(max_length=20)),
                (
                    "semester",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subjects",
                        to="database.semester",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StudentScore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("attendance", models.IntegerField(default=0)),
                ("assignments", models.IntegerField(default=0)),
                ("midterm", models.IntegerField(default=0)),
                ("final", models.IntegerField(default=0)),
                (
                    "semester",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scores",
                        to="database.semester",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scores",
                        to="database.student",
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scores",
                        to="database.subject",
                    ),
                ),
            ],
            options={
                "unique_together": {("student", "subject")},
            },
        ),
    ]
